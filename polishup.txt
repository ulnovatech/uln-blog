I have a complete but simplistic React + Netlify CMS blog system. The system works: routing, markdown blog posts, and CMS integration function. I want you to upgrade **all existing code files** to professional, market-ready, production-level code. Keep all current functionality but make the code:

1. **Clean, modular, and maintainable** — proper folder/file separation, consistent formatting, modern React best practices (hooks, context, functional components, etc.).
2. **Fully styled** — use TailwindCSS v3 for polished UI/UX, responsive layout, proper spacing, typography, hover/focus states, cards, and consistent color scheme.
3. **Professional UX** — loading indicators, error boundaries, empty states, hover effects, mobile-first responsiveness, and readable blog content.
4. **Markdown rendering** — display headings, lists, images, links, and code blocks properly with styling.
5. **Admin usability** — hidden shortcut to access Admin Dashboard, clearly separated from the client-facing blog pages.
6. **Enhanced components** — create full versions of `BlogCard`, `BlogContent`, `BlogMeta`, `Sidebar`, `Topbar`, `Footer`, `BlogContext`, `AdminDashboard`, `BlogList`, `BlogPost`, `Home`, `dateFormatter.js`, `markdownLoader.js`, `globals.css`, and `blog.css`.
7. **SEO ready** — add `react-helmet` for dynamic titles and meta tags on each blog post and blog list.
8. **Polish the main app** — `App.jsx` and `main.jsx` must wrap the layout properly, include context providers, and integrate all components.
9. **Professional error handling** — graceful fallbacks for missing posts, failed loads, or invalid URLs.
10. **Production-ready code** — fully replace existing prototype code with market-level files.

Output the **full contents of every file** so I can copy-paste into my project. Include TailwindCSS classes and all required imports.
